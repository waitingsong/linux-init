#!/bin/sh
set -eo pipefail

FILE='/etc/sysctl.d/hugepage.conf'

pages=$1
if [[ -z $pages ]]; then
  echo -e "Usage: source $0 <percent_number>|auto    # 每个页面单位 2MBytes"
  echo -e "Example: source $0 20                # means 20%"
  echo -e "Example: source $0 auto              # read shared_memory_size_in_huge_pages from postgres instance "
  echo -e "\n"
  cat /proc/meminfo | grep Huge
  sysctl -a | grep vm.nr_hugepages
  sysctl -a | grep vm.hugetlb_shm_group
  exit 1
fi

echo "==================== 设置 HugePages （可能需重启） ===================="


gid=$(id -g postgres)

if [[ "$pages" == 'auto' ]]; then
  if [[ "$(whoami)" != "root" ]]; then
    # try access postgres from nr_hugepages
    NR_HUGEPAGE=$(psql -qwAXtc 'show shared_memory_size_in_huge_pages')
  else
    NR_HUGEPAGE=$(sudo -iu postgres psql -qwAXtc 'show shared_memory_size_in_huge_pages')
  fi

  # if huge pages are not supported, this will be -1
  if [[ -z "${NR_HUGEPAGE}" ]] || [[ ${NR_HUGEPAGE} -lt 0 ]] ; then
      echo "[FAIL] fail to acquire shared_memory_size_in_huge_pages from postgres"
      exit 1
  fi

  DIRECTIVE="vm.nr_hugepages=${NR_HUGEPAGE}"
  echo "echo ${DIRECTIVE} > ${FILE}"
  echo "${DIRECTIVE}" > ${FILE}

  if [[ -n $gid ]]; then
    DIRECTIVE2="vm.hugetlb_shm_group=$gid"
    # Restrict hugepage used by postgres only
    echo ${DIRECTIVE2} >> ${FILE}
  fi

else
  # 获取系统总内存（单位kB）
  total_memory=$(grep MemTotal /proc/meminfo | awk '{print $2}')
  huge_page_size=$(grep Hugepagesize /proc/meminfo | awk '{print $2}')
  huge_page_size_mb=$((huge_page_size / 1024))


  # 如果 pages=0，表示关闭
  if [[ "$pages" == '0' ]]; then
    echo -e "关闭 HugePages\n"
    echo "vm.nr_hugepages = 0" > $FILE
    sysctl -p $FILE
    cat /proc/meminfo | grep Huge
    exit 0
  fi

  if [[ $pages -gt 80 ]]; then
    echo "设置 HugePages 失败，pages 不能大于 80"
    exit 1
  fi

  if [[ $pages -lt 0 ]]; then
    echo "设置 HugePages 失败，pages 不能小于 0"
    exit 1
  fi

  # 如果内存大于 limit MB
  limit=4000
  if [[ $total_memory -gt $limit ]]; then
    # 根据 pages百分比计算需要的内存值（单位kB）
    target_memory=$((total_memory * pages / 100))
    target_memory_mb=$((target_memory / 1024))

    # 根据 pages 百分比计算需要设置 HugePages 数量
    hugePages=$((target_memory / huge_page_size))

    echo "系统总内存: $((total_memory / 1024)) MB, 巨页面单位: $huge_page_size_mb MB"
    echo "分配内存: $target_memory_mb MB, 巨页面数量: $hugePages "
    echo "vm.nr_hugepages = $hugePages" > $FILE

    if [[ -n $gid ]]; then
      echo "vm.hugetlb_shm_group = $gid" >> $FILE
    fi

  else
    echo "内存小于8G，不设置 HugePages"
  fi

fi

echo -e "\n"
sysctl -p $FILE
cat /proc/meminfo | grep Huge
sysctl -a | grep vm.nr_hugepages
sysctl -a | grep vm.hugetlb_shm_group
