#!/bin/sh
set -eo pipefail


pages=$1
if [[ -z $pages ]]; then
  echo -e "Usage: source $0 <percent_number>    # 每个页面单位 2MBytes"
  echo -e "Example: source $0 20                #  means 20% \n"
  cat /proc/meminfo | grep Huge
  exit 1
fi

echo "==================== 设置 HugePages （需重启） ===================="

# 获取系统总内存（单位kB）
total_memory=$(grep MemTotal /proc/meminfo | awk '{print $2}')
huge_page_size=$(grep Hugepagesize /proc/meminfo | awk '{print $2}')
huge_page_size_mb=$((huge_page_size / 1024))

conf_file="/etc/sysctl.d/hugepage.conf"

# 如果 pages=0，表示关闭
if [[ "$pages" == '0' ]]; then
  echo -e "关闭 HugePages\n"
  echo "vm.nr_hugepages = 0" > $conf_file
  sysctl -p
  cat /proc/meminfo | grep Huge
  exit 0
fi

if [[ $pages -gt 80 ]]; then
  echo "设置 HugePages 失败，pages 不能大于 80"
  exit 1
fi

if [[ $pages -lt 0 ]]; then
  echo "设置 HugePages 失败，pages 不能小于 0"
  exit 1
fi

limit=1000
# 如果内存大于 limit MB
if [[ $total_memory -gt $limit ]]; then
  # 根据 pages百分比计算需要的内存值（单位kB）
  target_memory=$((total_memory * pages / 100))
  target_memory_mb=$((target_memory / 1024))

  # 根据 pages 百分比计算需要设置 HugePages 数量
  hugePages=$((target_memory / huge_page_size))

  echo "系统总内存: $((total_memory / 1024)) MB, 巨页面单位: $huge_page_size_mb MB"
  echo "分配内存: $target_memory_mb MB, 巨页面数量: $hugePages "
  echo "vm.nr_hugepages = $hugePages" > $conf_file

  sysctl -p
else
  echo "内存小于8G，不设置 HugePages"
fi

echo -e "\n"
cat /proc/meminfo | grep Huge

